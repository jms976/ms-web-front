{"version":3,"sources":["pages/Login/Fail/index.tsx","modules/Styled/DefaultContainer.ts","modules/Styled/Select.tsx","modules/Styled/Input.tsx","modules/Styled/Switch.tsx","modules/Styled/Tooltip.tsx"],"names":["LoginFail","dispatch","useAppDispatch","history","useHistory","fetchAuthUser","a","Http","get","process","catch","err","console","log","setIsAuth","setAuthUser","push","response","data","status","onClick","timer","url","newWin","window","open","setInterval","closed","clearInterval","DefaultContainer","styled","div","props","width","Container","customStyles","control","styles","state","boxShadow","borderRadius","menuIsOpen","minHeight","selectProps","height","borderColor","cursor","valueContainer","fontSize","color","indicatorSeparator","display","dropdownIndicator","padding","clearIndicator","svg","menu","margin","option","isDisabled","backgroundColor","lineHeight","overflow","isOverflow","textOverflow","whiteSpace","noOptionsMessage","DropdownIndicator","SelectWrapper","options","e","stopPropagation","preventDefault","isSearchable","components","onChange","disabled","menuPortalTarget","document","querySelector","React","memo","Input","input","isCount","isValid","isError","CountLangs","span","SearchIcon","InputBox","maxLength","isSeachIcon","useState","value","setValue","valueLen","setValueLen","displayIcon","setDisplayIcon","useEffect","length","target","autoComplete","SwitchWrapper","checked","large","isLoading","event","onColor","onHandleColor","offColor","offHandleColor","handleDiameter","uncheckedIcon","checkedIcon","activeBoxShadow","className","classNames","active","Tooltip","trigger","children","content","placement","bgColor","useHover","isOver","hoverProps","useLayer","isOpen","triggerOffset","triggerProps","layerProps","arrowProps","renderLayer","includes","isReactText","style","zIndex","border","size","angle","roundness","borderWidth"],"mappings":"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","file":"static/js/7.0ca16b94.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Http from \"modules/Http\";\n\nimport { useAppDispatch } from \"app/hooks\";\nimport { setIsAuth, setAuthUser } from \"features/commonSlice/commonSlice\";\n\nimport { DefaultContainer } from \"modules/Styled\";\n\nconst LoginFail: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const history = useHistory();\n\n  const fetchAuthUser = async () => {\n    const response = await Http.get(\n      `${process.env.REACT_APP_API_HOST}/auth/user`\n    ).catch((err) => {\n      console.log(\"Not properly authenticated\");\n      dispatch(setIsAuth(false));\n      dispatch(setAuthUser(null));\n      history.push(\"/login/fail\");\n    });\n\n    if (response && response.data) {\n      console.log(\"User: \", response.data);\n      dispatch(setIsAuth(true));\n      if (response.data.status === \"success\") {\n        dispatch(setAuthUser(response.data.data));\n      }\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <DefaultContainer>\n      <div\n        onClick={async () => {\n          let timer: NodeJS.Timeout | null = null;\n          const url = `${process.env.REACT_APP_API_HOST}/auth/login`;\n          const newWin = window.open(url, \"_blank\", \"width=500, height=600\");\n          if (newWin) {\n            timer = setInterval(() => {\n              if (newWin.closed) {\n                fetchAuthUser();\n                if (timer) clearInterval(timer);\n              }\n            }, 500);\n          }\n        }}\n      >\n        로그인\n      </div>\n      {/* <Counter /> */}\n    </DefaultContainer>\n  );\n};\n\nexport default LoginFail;\n","import styled from \"styled-components\";\n\nconst DefaultContainer = styled.div<{ width?: number }>`\n  display: flex;\n  position: absolute;\n  top: 55px;\n  left: ${(props) => (props.width ? props.width + \"px\" : \"150px\")};\n  width: ${(props) =>\n    props.width ? \"calc(100% - \" + props.width + \"px);\" : \"calc(100% - 150px)\"};\n  min-width: 900px;\n`;\n\nexport default DefaultContainer;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { MdArrowDropDown } from \"react-icons/md\";\nimport Select, { OptionTypeBase, components } from \"react-select\";\n\n/** 셀렉트 박스 컨테이너 */\nconst Container = styled.div``;\n\n/** react-select 커스텀 스타일 */\nconst customStyles = {\n  control: (styles: any, state: any) => {\n    return {\n      ...styles,\n      boxShadow: \"none\",\n      borderRadius: state.menuIsOpen ? \"4px 4px 0 0\" : \"4px\",\n      minHeight: state.selectProps.minHeight ? state.selectProps.minHeight : 25,\n      height: \"100%\",\n      borderColor: \"rgb(229,230,235)\",\n      cursor: \"pointer\",\n    };\n  },\n  valueContainer: (styles: any, state: any) => ({\n    ...styles,\n    fontSize: 13,\n    color: \"#767676\",\n    height: \"100%\",\n  }),\n  indicatorSeparator: (styles: any, state: any) => ({\n    ...styles,\n    display: \"none\",\n  }),\n  dropdownIndicator: (styles: any, state: any) => ({\n    ...styles,\n    padding: \"0 5px\",\n    fontSize: 21,\n  }),\n  clearIndicator: (styles: any, state: any) => ({\n    ...styles,\n    svg: {\n      width: 15,\n      height: 15,\n    },\n  }),\n  menu: (styles: any, state: any) => ({\n    ...styles,\n    margin: \"0 1px 1px\",\n    borderRadius: \"0 0 4px 4px\",\n    boxShadow: \"0 0 0 1px rgb(55, 125, 255)\",\n    width: \"calc(100% - 2px)\",\n    padding: 0,\n  }),\n  option: (styles: any, state: any) => ({\n    ...styles,\n    color: state.isDisabled ? \"#989898\" : \"#767676\",\n    backgroundColor: state.isDisabled ? \"#f2f2f2\" : \"#fff\",\n    cursor: state.isDisabled ? \"not-allowed\" : \"pointer\",\n    padding: \"0 0 0 15px\",\n    fontSize: 13,\n    height: 30,\n    lineHeight: \"30px\",\n    \":hover\": {\n      backgroundColor: \"rgb(233, 241, 254)\",\n    },\n    overflow: state.data.isOverflow ? \"none\" : \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  }),\n  noOptionsMessage: (styles: any, state: any) => ({\n    ...styles,\n    padding: 0,\n    fontSize: 13,\n  }),\n};\n\n/** Arrow 아이콘 */\nconst DropdownIndicator = (props: any) => {\n  return (\n    <components.DropdownIndicator {...props}>\n      <MdArrowDropDown />\n    </components.DropdownIndicator>\n  );\n};\n\nconst SelectWrapper: React.FC<OptionTypeBase> = (options) => {\n  return (\n    <Container\n      onClick={(e: any) => {\n        e.stopPropagation();\n        e.preventDefault();\n      }}\n    >\n      <Select\n        {...options}\n        isSearchable={options.isSearchable || false}\n        styles={customStyles}\n        components={{ DropdownIndicator }}\n        onChange={options.onChange}\n        isDisabled={options.disabled}\n        menuPortalTarget={document.querySelector(\"body\")}\n      />\n    </Container>\n  );\n};\n\nexport default React.memo(SelectWrapper);\n","import React, { useState, useEffect } from \"react\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nimport styled from \"styled-components\";\n\ninterface InputContainer {\n  width?: string;\n}\n\ninterface InputOptions {\n  /** 글자수 제한 사용여부 */\n  isCount?: boolean;\n  /** 유효성 검사값 */\n  isValid?: boolean;\n  /** 에러표시 */\n  isError?: boolean;\n}\n\ninterface InputBoxProps {\n  [x: string]: any;\n  /** 글자수 제한 사용여부 */\n  isCount?: boolean;\n  /** 최대 글자수 */\n  maxLength?: number;\n  /** 유효성 검사값 */\n  isValid?: boolean;\n  /** 에러표시 */\n  isError?: boolean;\n  /** 값 변경시 */\n  onChange: (e: any) => void;\n\n  isDisabled?: boolean;\n\n  isSeachIcon?: boolean;\n}\n\n/** 인풋 컨테이너 */\nconst Container = styled.div<InputContainer>`\n  position: relative;\n  width: ${(props) => props.width};\n`;\n\n/** 인풋 스타일 */\nconst Input = styled.input<InputOptions>`\n  position: relative;\n  height: 32px;\n  width: 100%;\n  box-sizing: border-box;\n  font-size: 13px;\n  background-color: rgb(255, 255, 255);\n  color: var(--black);\n  outline: none;\n  padding: ${(props) =>\n    props.isCount ? \"0px calc(54px) 0px 10px\" : \"0px 10px\"};\n  border-radius: 4px;\n  border-width: 1px;\n  border-style: solid;\n  border-color: ${(props) =>\n    props.isValid ? \"rgb(229, 230, 235)\" : \"rgb(255, 0, 0)\"};\n  border-image: initial;\n\n  &:focus {\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${(props) =>\n      props.isValid ? \"rgb(55, 125, 255)\" : \"rgb(255, 0, 0)\"};\n    border-image: initial;\n\n    ${(props) =>\n      props.isError &&\n      `\n            border-color: #d45027;\n        `}\n  }\n\n  &[disabled] {\n    background-color: hsl(0, 0%, 95%);\n    border-color: hsl(0, 0%, 90%);\n    color: hsl(0, 0%, 60%);\n  }\n  ${(props) =>\n    props.disabled &&\n    `\n            background-color: red\n        `}\n\n  ${(props) =>\n    props.isError &&\n    `\n        border-color: #d45027;\n    `}\n`;\n\n/** 글자수 카운트 */\nconst CountLangs = styled.span`\n  display: flex;\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n  -webkit-box-align: center;\n  align-items: center;\n  font-size: 11px;\n  color: rgb(148, 148, 148);\n  position: absolute;\n  height: 20px;\n  width: 44px;\n  left: calc((100% - 44px) - 10px);\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\n/** 아이콘 */\nconst SearchIcon = styled.span`\n  display: flex;\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n  -webkit-box-align: center;\n  align-items: center;\n  color: rgb(148, 148, 148);\n  position: absolute;\n  height: 29px;\n  width: 30px;\n  left: calc(100% - 44px);\n  top: 50%;\n  transform: translateY(-50%);\n  z-index: 1;\n`;\n\nconst InputBox: React.FC<InputBoxProps> = ({\n  onChange,\n  isCount,\n  maxLength,\n  isValid = true,\n  isError = false,\n  width,\n  isDisabled,\n  isSeachIcon,\n  ...props\n}) => {\n  const [value, setValue] = useState(\"\");\n  const [valueLen, setValueLen] = useState(0);\n  const [displayIcon, setDisplayIcon] = useState(true);\n\n  /**\n   * onChange\n   * @param e\n   */\n  const handleChange = (e: any) => {\n    if (isCount && maxLength && e.target.value.length > maxLength) return;\n    setDisplayIcon(false);\n    if (e.target.value.length === 0) {\n      setDisplayIcon(true);\n    }\n    setValue(e.target.value);\n    setValueLen(e.target.value.length);\n    onChange(e);\n  };\n\n  useEffect(() => {\n    if (!props.value) return;\n\n    setValue(props.value);\n    setValueLen(props.value.length);\n  }, [props.value]);\n\n  return (\n    <>\n      <Container width={width}>\n        {isSeachIcon && displayIcon && (\n          <SearchIcon>\n            <AiOutlineSearch />\n          </SearchIcon>\n        )}\n        <Input\n          isCount={isCount}\n          isValid={isValid}\n          isError={isError}\n          value={value}\n          onChange={handleChange}\n          autoComplete={\"off\"}\n          {...props}\n          disabled={isDisabled}\n        />\n        {isCount && (\n          <CountLangs>\n            {valueLen} / {maxLength}\n          </CountLangs>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default InputBox;\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport Switch from \"react-switch\";\nimport classNames from \"classnames\";\n\n/** 셀렉트 박스 컨테이너 */\nconst Container = styled.span`\n  display: inline-block;\n`;\n\ninterface SwitchProps {\n  /** 활성/비활성 설정 */\n  checked: boolean;\n  /** 값 변경시 */\n  onChange: (event: any, checked?: any) => void;\n  /** 라이사이즈 */\n  large?: boolean;\n  /** 로딩중 여부 */\n  isLoading?: boolean;\n}\n\nconst SwitchWrapper: React.FC<SwitchProps> = ({\n  checked,\n  onChange,\n  large = false,\n  isLoading = false,\n}) => {\n  const hanndleChange = (checked: any, event: any) => {\n    onChange(checked, event);\n  };\n  return (\n    <Container>\n      <Switch\n        onChange={hanndleChange}\n        checked={checked}\n        onColor={large ? \"#d2e3ff\" : \"#E9F1FE\"}\n        onHandleColor=\"#377dff\"\n        offColor=\"#eaeaea\"\n        offHandleColor=\"#c0bfc0\"\n        handleDiameter={large ? 26 : 16}\n        uncheckedIcon={false}\n        checkedIcon={false}\n        boxShadow=\"none\"\n        activeBoxShadow=\"none\"\n        height={large ? 20 : 20}\n        width={large ? 50 : 36}\n        className={classNames({\n          \"react-switch\": true,\n          large: large,\n          active: checked,\n        })}\n        disabled={isLoading}\n      />\n    </Container>\n  );\n};\n\nexport default React.memo(SwitchWrapper);\n","import * as React from \"react\";\nimport { useLayer, useHover, Arrow } from \"react-laag\";\ninterface TooltipProps {\n  children: any;\n  content: string;\n  placement?:\n    | \"bottom-start\"\n    | \"bottom-end\"\n    | \"bottom-center\"\n    | \"top-start\"\n    | \"top-center\"\n    | \"top-end\"\n    | \"left-end\"\n    | \"left-center\"\n    | \"left-start\"\n    | \"right-end\"\n    | \"right-center\"\n    | \"right-start\"\n    | \"center\";\n  width?: number;\n  color?: string;\n  bgColor?: string;\n  borderColor?: string;\n}\nexport const Tooltip: React.FC<TooltipProps> = ({\n  children,\n  content,\n  placement,\n  width,\n  color,\n  bgColor,\n  borderColor,\n}) => {\n  const [isOver, hoverProps] = useHover();\n\n  const { triggerProps, layerProps, arrowProps, renderLayer } = useLayer({\n    isOpen: isOver,\n    placement: placement ? placement : \"top-center\",\n    triggerOffset: 10,\n  });\n\n  let trigger;\n  if (isReactText(children)) {\n    trigger = (\n      <span className=\"tooltip-text-wrapper\" {...triggerProps} {...hoverProps}>\n        {children}\n      </span>\n    );\n  } else {\n    trigger = React.cloneElement(children, {\n      ...triggerProps,\n      ...hoverProps,\n    });\n  }\n\n  return (\n    <>\n      {trigger}\n      {renderLayer(\n        <>\n          {isOver && (\n            <div\n              {...layerProps}\n              style={{\n                ...layerProps.style,\n                zIndex: 11,\n                backgroundColor: bgColor ? bgColor : \"#1a1a1a\",\n                color: color ? color : \"#fff\",\n                padding: \"5px 10px\",\n                fontSize: 13,\n                lineHeight: \"18px\",\n                borderRadius: 5,\n                border: `1px solid ${borderColor ? borderColor : \"#1a1a1a\"}`,\n                boxShadow: \"rgba(210, 210, 210, 0.5) 0px 0px 3px 0px\",\n                width: width ? width : \"auto\",\n              }}\n            >\n              {content}\n              <Arrow\n                {...arrowProps}\n                size={6}\n                angle={45}\n                roundness={1}\n                borderWidth={1}\n                borderColor={borderColor ? borderColor : \"#1a1a1a\"}\n                backgroundColor={bgColor ? bgColor : \"#1a1a1a\"}\n              />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nfunction isReactText(children: any) {\n  return [\"string\", \"number\"].includes(typeof children);\n}\n\nexport default React.memo(Tooltip);\n"],"sourceRoot":""}